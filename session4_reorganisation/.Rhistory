summarise(CV_PR= sd(PR)/mean(PR),
CV_dLR= sd(dLR)/mean(dLR)) %>%
pivot_longer(CV_PR:CV_dLR, names_to = "CV_type", values_to = "CV") %>%
ggplot(aes(x=Genotype,y=CV, col=CO2)) +
geom_point() +
facet_grid(KNO3~CV_type) +
theme(legend.text=element_text(size=12.5),legend.title = element_text(size=13, face="bold"),
axis.text=element_text(size=12.5, angle=45, hjust = 1), axis.title=element_text(size=15),
plot.title = element_text(size=18),
panel.background = element_rect(fill = "white", colour = "grey50"))
ggsave("CV_eCO2_aCO2_WT_mut_KNO3_rsa2.jpg", width = 13, height = 6)
group_by(rsa2_aCO2_eCO2, Genotype, CO2, KNO3) %>%
summarise(CV_PR= sd(PR)/mean(PR),
CV_dLR= sd(dLR)/mean(dLR)) %>%
ggplot(aes(x=Genotype,y=CV_PR, col=CO2)) +
geom_point() +
facet_wrap(~KNO3, scales = "free") +
theme(legend.text=element_text(size=12.5),legend.title = element_text(size=13, face="bold"),
axis.text=element_text(size=12.5, angle=45, hjust = 1), axis.title=element_text(size=15),
plot.title = element_text(size=18),
panel.background = element_rect(fill = "white", colour = "grey50"))
ggsave("CV_PR_eCO2_aCO2_WT_mut_KNO3_rsa2.jpg", width = 13, height = 6)
group_by(rsa2_aCO2_eCO2, Genotype, CO2, KNO3) %>%
summarise(CV_PR= sd(PR)/mean(PR),
CV_dLR= sd(dLR)/mean(dLR)) %>%
ggplot(aes(x=Genotype,y=CV_dLR, col=CO2)) +
geom_point() +
facet_wrap(~KNO3, scales = "free") +
theme(legend.text=element_text(size=12.5),legend.title = element_text(size=13, face="bold"),
axis.text=element_text(size=12.5, angle=45, hjust = 1), axis.title=element_text(size=15),
plot.title = element_text(size=18),
panel.background = element_rect(fill = "white", colour = "grey50"))
ggsave("CV_dLR_eCO2_aCO2_WT_mut_KNO3_rsa2.jpg", width = 13, height = 6)
group_by(rsa2_aCO2_eCO2, Genotype, CO2, KNO3) %>%
summarise(CV_PR= sd(PR)/mean(PR),
CV_dLR= sd(dLR)/mean(dLR)) %>%
ggplot(aes(x= CO2 ,y=CV_PR, col=Genotype)) +
geom_point() +
facet_wrap(~KNO3, scales = "free") +
theme(legend.text=element_text(size=12.5),legend.title = element_text(size=13, face="bold"),
axis.text=element_text(size=12.5), axis.title=element_text(size=15),
plot.title = element_text(size=18),
panel.background = element_rect(fill = "white", colour = "grey50"))
ggsave("CV_PR_WT_mut_eCO2_aCO2_KNO3_rsa2.jpg", width = 13, height = 6)
group_by(rsa2_aCO2_eCO2, Genotype, CO2, KNO3) %>%
summarise(CV_PR= sd(PR)/mean(PR),
CV_dLR= sd(dLR)/mean(dLR)) %>%
ggplot(aes(x= CO2 ,y=CV_dLR, col=Genotype)) +
geom_point() +
facet_wrap(~KNO3, scales = "free") +
theme(legend.text=element_text(size=12.5),legend.title = element_text(size=13, face="bold"),
axis.text=element_text(size=12.5), axis.title=element_text(size=15),
plot.title = element_text(size=18),
panel.background = element_rect(fill = "white", colour = "grey50"))
ggsave("CV_dLR_WT_mut_eCO2_aCO2_KNO3_rsa2.jpg", width = 13, height = 6)
CCrsa_aCO2 <- read_tsv("RSA_data_pour_R/CCrsa_1.txt")
CCrsa_eCO2 <- read_tsv("RSA_data_pour_R/ccrsa2.txt")
CCrsa_aCO2_eCO2 <- rbind(CCrsa_aCO2, CCrsa_eCO2)
group_by(CCrsa_aCO2_eCO2, Genotype, CO2, KNO3) %>%
summarise(CV_PR= sd(PR)/mean(PR),
CV_dLR= sd(dLR)/mean(dLR)) %>%
pivot_longer(CV_PR:CV_dLR, names_to = "CV_type", values_to = "CV") %>%
ggplot(aes(x=Genotype,y=CV, col=CO2)) +
geom_point() +
facet_grid(KNO3~CV_type) +
theme(legend.text=element_text(size=12.5),legend.title = element_text(size=13, face="bold"),
axis.text=element_text(size=12.5, angle=45, hjust = 1), axis.title=element_text(size=15),
plot.title = element_text(size=18),
panel.background = element_rect(fill = "white", colour = "grey50"))
ggsave("CV_eCO2_aCO2_WT_mut_KNO3_CCrsa.jpg", width = 18, height = 8)
group_by(CCrsa_aCO2_eCO2, Genotype, CO2, KNO3) %>%
summarise(CV_PR= sd(PR)/mean(PR),
CV_dLR= sd(dLR)/mean(dLR)) %>%
ggplot(aes(x=Genotype,y=CV_PR, col=CO2)) +
geom_point() +
facet_wrap(~KNO3, scales = "free") +
theme(legend.text=element_text(size=12.5),legend.title = element_text(size=13, face="bold"),
axis.text=element_text(size=12.5, angle=45, hjust = 1), axis.title=element_text(size=15),
plot.title = element_text(size=18),
panel.background = element_rect(fill = "white", colour = "grey50"))
ggsave("CV_PR_eCO2_aCO2_WT_mut_KNO3_CCrsa.jpg", width = 18, height = 8)
group_by(CCrsa_aCO2_eCO2, Genotype, CO2, KNO3) %>%
summarise(CV_PR= sd(PR)/mean(PR),
CV_dLR= sd(dLR)/mean(dLR)) %>%
ggplot(aes(x=Genotype,y=CV_dLR, col=CO2)) +
geom_point() +
facet_wrap(~KNO3, scales = "free") +
theme(legend.text=element_text(size=12.5),legend.title = element_text(size=13, face="bold"),
axis.text=element_text(size=12.5, angle=45, hjust = 1), axis.title=element_text(size=15),
plot.title = element_text(size=18),
panel.background = element_rect(fill = "white", colour = "grey50"))
ggsave("CV_dLR_eCO2_aCO2_WT_mut_KNO3_CCrsa.jpg", width = 18, height = 8)
group_by(CCrsa_aCO2_eCO2, Genotype, CO2, KNO3) %>%
summarise(CV_PR= sd(PR)/mean(PR),
CV_dLR= sd(dLR)/mean(dLR)) %>%
ggplot(aes(x= CO2 ,y=CV_PR, col=Genotype)) +
geom_point() +
facet_wrap(~KNO3, scales = "free") +
theme(legend.text=element_text(size=12.5),legend.title = element_text(size=13, face="bold"),
axis.text=element_text(size=12.5), axis.title=element_text(size=15),
plot.title = element_text(size=18),
panel.background = element_rect(fill = "white", colour = "grey50"))
ggsave("CV_PR_WT_mut_eCO2_aCO2_KNO3_CCrsa.jpg", width = 13, height = 6)
group_by(CCrsa_aCO2_eCO2, Genotype, CO2, KNO3) %>%
summarise(CV_PR= sd(PR)/mean(PR),
CV_dLR= sd(dLR)/mean(dLR)) %>%
ggplot(aes(x= CO2 ,y=CV_dLR, col=Genotype)) +
geom_point() +
facet_wrap(~KNO3, scales = "free") +
theme(legend.text=element_text(size=12.5),legend.title = element_text(size=13, face="bold"),
axis.text=element_text(size=12.5), axis.title=element_text(size=15),
plot.title = element_text(size=18),
panel.background = element_rect(fill = "white", colour = "grey50"))
ggsave("CV_dLR_WT_mut_eCO2_aCO2_KNO3_CCrsa.jpg", width = 13, height = 6)
citation("scTenifoldNet")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data <- read_tsv("ICP_results_RILs.txt")
View(data)
distinct(data, ID)
data_filtered <- filter(data, ID%in%c("Col","Ct1","Cvi","Zip9"))
View(data_filtered)
distinct(data_filtered, ID)
names(data_filtered)
group_by(ID, Organ, Element_Label) %>%
summarise(n())
group_by(data_filtered,ID, Organ, Element_Label) %>%
summarise(n())
data_filtered
ggplot(data_filtered, aes(x=Organ, y=moyenne_concentration, col=ID)) %>%
geom_point() +
facet_wrap(~Element_Label)
ggplot(data_filtered, aes(x=Organ, y=moyenne_concentration, col=ID)) +
geom_point() +
facet_wrap(~Element_Label)
ggplot(data_filtered, aes(x=Organ, y=moyenne_concentration, col=ID)) +
geom_point() +
facet_wrap(~Element_Label, scales = "free")
ggplot(data_filtered, aes(x=Organ, y=moyenne_concentration, col=ID)) +
geom_point() +
facet_wrap(Plant_Num~Element_Label, scales = "free")
ggplot(data_filtered, aes(x=Organ, y=moyenne_concentration, col=ID)) +
geom_point() +
facet_wrap(~Element_Label, scales = "free")
ggplot(data_filtered, aes(x=ID , y=moyenne_concentration)) +
geom_point() +
facet_wrap(Organ~Element_Label, scales = "free")
filter(data_filtered,Organ=="rosette") %>%
ggplot(data_filtered, aes(x=ID , y=moyenne_concentration)) +
geom_point() +
facet_wrap(~Element_Label, scales = "free")
filter(data_filtered,Organ=="rosette") %>%
ggplot( aes(x=ID , y=moyenne_concentration)) +
geom_point() +
facet_wrap(~Element_Label, scales = "free")
filter(data_filtered,Organ=="rosette") %>%
ggplot( aes(x=ID , y=moyenne_concentration)) +
geom_point() +
facet_wrap(~Element_Label, scales = "free") +
ggtitle("Rosettes")
filter(data_filtered,Organ=="rosette") %>%
ggplot( aes(x=Element_Label  , y=moyenne_concentration)) +
geom_point() +
facet_wrap(~ID, scales = "free") +
ggtitle("Rosettes")
filter(data_filtered,Organ=="rosette") %>%
ggplot( aes(x=Element_Label  , y=moyenne_concentration)) +
geom_point() +
facet_wrap(~ID, scales = "free") +
ggtitle("Rosettes") +
scale_y_log10()
filter(data_filtered,Organ=="rosette") %>%
ggplot( aes(x=Element_Label  , y=moyenne_concentration, col=ID)) +
geom_boxplot() +
ggtitle("Rosettes") +
scale_y_log10()
filter(data_filtered, ID=="Col")
filter(data_filtered, ID=="Col") %>%
group_by(Organ, Element_Label) %>%
summarise(med_Col=median(moyenne_concentration))
filter(data_filtered, ID=="Col") %>%
group_by(Organ, Element_Label) %>%
summarise(med_Col=median(moyenne_concentration)) %>%
full_join(data_filtered, by=c("Organ"="Organ", "Element_Label"="Element_Label"))
filter(data_filtered, ID=="Col") %>%
group_by(Organ, Element_Label) %>%
summarise(med_Col=median(moyenne_concentration)) %>%
full_join(data_filtered, by=c("Organ"="Organ", "Element_Label"="Element_Label")) %>%
mutate(concentration_norm_Col=moyenne_concentration/med_Col)
data_filtered_norm <- filter(data_filtered, ID=="Col") %>%
group_by(Organ, Element_Label) %>%
summarise(med_Col=median(moyenne_concentration)) %>%
full_join(data_filtered, by=c("Organ"="Organ", "Element_Label"="Element_Label")) %>%
mutate(concentration_norm_Col=moyenne_concentration/med_Col)
filter(data_filtered_norm,Organ=="rosette") %>%
ggplot( aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
ggtitle("Rosettes")
ggplot( aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_point() +
facet_wrap(~Organ, scales = "free")
ggplot(data_filtered_norm, aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_point() +
facet_wrap(~Organ, scales = "free")
data_filtered_norm <- filter(data_filtered, ID=="Col") %>%
gplot( aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_point() +
facet_wrap(~Organ, scales = "free")
filter(data_filtered_norm,Organ=="rosette") %>%
gplot(aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_point()
filter(data_filtered_norm,Organ=="rosette") %>%
ggplot(aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_point()
filter(data_filtered_norm,Organ=="rosette") %>%
ggplot(aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_jitter()
filter(data_filtered_norm,Organ=="rosette") %>%
ggplot(aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_dotplot()
?geom_jitter
filter(data_filtered_norm,Organ=="rosette") %>%
ggplot(aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_jitter(width=0)
filter(data_filtered_norm,Organ=="rosette") %>%
ggplot(aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_jitter(width=0, position="position_jitter")
filter(data_filtered_norm,Organ=="rosette") %>%
ggplot(aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_jitter(position="position_jitter")
?geom_point
filter(data_filtered_norm,Organ=="rosette") %>%
ggplot(aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_jitter(position = position_jitterdodge(jitter.width=0, jitter.height = 0))
filter(data_filtered_norm,Organ=="seed") %>%
ggplot(aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_jitter(position = position_jitterdodge(jitter.width=0, jitter.height = 0)) +
ggtitle("Seed")
filter(data_filtered_norm,Organ=="seeds") %>%
ggplot(aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_jitter(position = position_jitterdodge(jitter.width=0, jitter.height = 0)) +
ggtitle("Seeds")
ggplot(data_filtered_norm, aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_point() +
facet_wrap(~Organ, scales = "free")
filter(data_filtered_norm,Organ=="rosette") %>%
ggplot(aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_jitter(position = position_jitterdodge(jitter.width=0, jitter.height = 0)) +
ggtitle("Rosette")
filter(data_filtered_norm,Organ=="seeds") %>%
ggplot(aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_jitter(position = position_jitterdodge(jitter.width=0, jitter.height = 0)) +
ggtitle("Seeds")
filter(data_filtered_norm,Organ=="stem") %>%
ggplot(aes(x=Element_Label  , y=concentration_norm_Col, col=ID)) +
geom_boxplot() +
geom_jitter(position = position_jitterdodge(jitter.width=0, jitter.height = 0)) +
ggtitle("Stem")
filter(data_filtered,Organ=="rosette") %>%
ggplot( aes(x=ID , y=moyenne_concentration)) +
geom_point() +
facet_wrap(~Element_Label, scales = "free") +
ggtitle("Rosettes")
filter(data_filtered,Organ=="rosette") %>%
ggplot( aes(x=Element_Label  , y=moyenne_concentration)) +
geom_point() +
facet_wrap(~ID, scales = "free") +
ggtitle("Rosettes") +
scale_y_log10()
filter(data_filtered,Organ=="rosette") %>%
ggplot( aes(x=Element_Label  , y=moyenne_concentration, col=ID)) +
geom_boxplot() +
ggtitle("Rosettes") +
scale_y_log10()
#
filter(data_filtered,Organ=="rosette") %>%
ggplot( aes(x=ID , y=moyenne_concentration)) +
geom_point() +
facet_wrap(~Element_Label, scales = "free") +
ggtitle("Rosettes")
filter(data_filtered,Organ=="rosette") %>%
ggplot( aes(x=Element_Label  , y=moyenne_concentration)) +
geom_point() +
facet_wrap(~ID, scales = "free") +
ggtitle("Rosettes") +
scale_y_log10()
filter(data_filtered,Organ=="rosette") %>%
ggplot( aes(x=Element_Label  , y=moyenne_concentration)) +
geom_point() +
facet_wrap(~ID, scales = "free") +
ggtitle("Rosettes") +
scale_y_log10()
filter(data_filtered,Organ=="rosette") %>%
ggplot( aes(x=Element_Label  , y=moyenne_concentration, col=ID)) +
geom_boxplot() +
ggtitle("Rosettes") +
scale_y_log10()
# Charger les librairies
library(tidyverse)
# Definir l'environnement de travail (session 4)
setwd("/Users/sandra/Desktop/BPMP/Teaching/2024-2025/L3_bioinfo_2024/2024_L3_R/session4_reorganisation/")
# Charger les donnees (burghardt_et_al_2015_expt1.txt) et les mettre dans un objet
expt1 <- read_tsv("data/burghardt_et_al_2015_expt1.txt")
View(expt1)
# Selectionner des colonnes
colnames(expt1)
# Selectionner des colonnes
colnames(expt1)
select(expt1, genotype, temperature)
select(expt1, -temperature)
# Selectionner des colonnes
colnames(expt1)
# Selectionner des colonnes
colnames(expt1)
select(expt1, contains("bolt"))
# Exercice 1: selectionnez les colonnes qui contiennent des donnees
# mesurees en mm
colnames(expt1)
select(expt1, contains("mm"))
?select
# BONUS:
# Selection 1: selectionnez les colonnes dont le titre finit par "bolt"
select(expt1, ends_with("bolt"))
# Selection 2: Selectionnez les colonnes qui ne sont pas plant_nb et genotype
select(expt1, -plant_nb, - genotype)
# Filtrer des lignes
distinct(expt1, vernalization)
filter(expt1, vernalization=="V")
filter(expt1, vernalization=="V" & fluctuation=="Var")
filter(expt1, vernalization=="V" & fluctuation=="var")
distinct(expt1, fluctuation)
filter(expt1, vernalization=="V" & fluctuation=="var")
filter(expt1, day.length=="8" | days.to.bolt > 85)
filter(expt1, day.length==8 | days.to.bolt > 85)
# Exercice 2
# Cas 1: garder les plantes qui ne sont pas du background Ler et qui ont ete
# traite avec une temperature fluctuante
filter(expt1, background!="Ler" & fluctuation=="Var")
# Cas 2: garder les plantes qui ont fleuries (bolt) en moins de 57 jours et qui
# ont au moins 40 feuilles de rosette
filter(expt1, days.to.bolt<57 & rosette.leaf.num >= 40)
# Cas 2: garder les plantes qui ont fleuries (bolt) en moins de 57 jours et qui
# ont au moins 40 feuilles de rosette
filter(expt1, days.to.bolt<57 & rosette.leaf.nm >= 40)
# Cas 2: garder les plantes qui ont fleuries (bolt) en moins de 57 jours et qui
# ont au moins 40 feuilles de rosette
filter(expt1, days.to.bolt<57 & rosette.leaf.num >= 400)
# Cas 2: garder les plantes qui ont fleuries (bolt) en moins de 57 jours et qui
# ont moins de 40 feuilles de rosette
filter(expt1, days.to.bolt<57 & rosette.leaf.num < 40)
# Cas 3: garder les plantes du genotype fca-6 pour qui le
# blade.length.mm n'est pas manquant
filter(expt1, genotype=="fca-6" & !is.na(blade.length.mm))
## BONUS
# garder les lignes pour lesquelles le background contient Col
# sauvez le resultat dans un nouvel objet et verifiez les valeurs avec distinct()
distinct(expt1, background)
filter(expt1, grepl('Col', background))
expt1_filtered <-(expt1, grepl('Col', background))
expt1_filtered <-filter(expt1, grepl('Col', background))
distinct(expt1_filtered, background)
write_tsv(expt1_filtered, file="data/expt1_background_contains_col.txt")
# chaines de commandes: %>% (pipe)
filter(expt1, vernalization=="V") %>%
select(genotype, total.leaf.length.mm)
filter(expt1, vernalization=="V")
# chaines de commandes: %>% (pipe)
filter(expt1, vernalization=="V") %>%
select(genotype, total.leaf.length.mm)
filter(expt1, background!="Ler" & fluctuation=="Var") %>%
select(., genotype, blade.length.mm, contains("bolt"))
filter(expt1, background!="Ler" & fluctuation=="var") %>%
select(., genotype, blade.length.mm, contains("bolt"))
filter(expt1, background!="Ler" & fluctuation=="var")
filter(expt1, background!="Ler" & fluctuation=="Var")
filter(expt1, background!="Ler" & fluctuation=="Var") %>%
select(., genotype, blade.length.mm, contains("bolt"))
# BONUS: transformez l'enchainement de commandes suivant en utilisant
# des pipes plutot que des objets intermediaires
read_tsv("data/burghardt_et_al_2015_expt1.txt") %>%
filter( fluctuation=="Con" & day.length==16) %>%
select(days.to.bolt:total.leaf.length.mm) %>%
summary()
names(expt1)
# BONUS: transformez l'enchainement de commandes suivant en utilisant
# des pipes plutot que des objets intermediaires
read_tsv("data/burghardt_et_al_2015_expt1.txt") %>%
filter( fluctuation=="Con" & day.length==16) %>%
select(days.to.bolt:total.leaf.length.mm) %>%
summary()
# Combiner avec un graphique
expt1 %>%
filter(vernalization=="V") %>%
ggplot(aes(x=fluctuation, y=days.to.flower)) +
geom_boxplot()
filter(expt1, day.length==8) %>%
ggplot(aes(x=genotype, y=days.to.flower)) +
geom_violin()
filter(expt1, grepl("Col", background))
filter(expt1, grepl("Col", background)) %>%
distinct(background)
filter(expt1, grepl("Col", background) & temperature==22)
filter(expt1, grepl("Col", background) & temperature==22) %>%
ggplot(aes(x=vernalization, y=days.to.bolt, fill=fluctuation)) +
geom_boxplot() +
facet_wrap(~genotype) +
theme_bw
filter(expt1, grepl("Col", background) & temperature==22) %>%
ggplot(aes(x=vernalization, y=days.to.bolt, fill=fluctuation)) +
geom_boxplot() +
facet_wrap(~genotype) +
theme_bw()
filter(expt1, grepl("Col", background) & temperature==22) %>%
ggplot(aes(x=vernalization, y=days.to.bolt, fill=fluctuation)) +
geom_boxplot() +
facet_wrap(~genotype, scales = "free") +
theme_bw()
library(ggpubr)
?stat_compare_means
filter(expt1, grepl("Col", background) & temperature==22) %>%
ggplot(aes(x=vernalization, y=days.to.bolt, fill=fluctuation)) +
geom_boxplot() +
facet_wrap(~genotype, scales = "free") +
theme_bw() +
stat_compare_means(label="p.signif")
filter(expt1, grepl("Col", background) & temperature==22) %>%
ggplot(aes(x=vernalization, y=days.to.bolt, fill=fluctuation)) +
geom_boxplot() +
facet_wrap(~genotype) +
theme_bw() +
stat_compare_means(label="p.signif")
filter(expt1, grepl("Col", background) & temperature==22) %>%
ggplot(aes(x=vernalization, y=days.to.bolt, fill=fluctuation)) +
geom_boxplot() +
facet_wrap(~genotype) +
theme_bw() +
stat_compare_means(label="p.signif", label.y.npc=150)
filter(expt1, grepl("Col", background) & temperature==22) %>%
ggplot(aes(x=vernalization, y=days.to.bolt, fill=fluctuation)) +
geom_boxplot() +
facet_wrap(~genotype) +
theme_bw() +
stat_compare_means(label="p.signif", label.y=150)
filter(expt1, grepl("Col", background) & temperature==22) %>%
ggplot(aes(x=vernalization, y=days.to.bolt, fill=fluctuation)) +
geom_boxplot() +
facet_wrap(~genotype) +
theme_bw() +
stat_compare_means(label="p.signif", label.y=140)
filter(expt1, grepl("Col", background) & temperature==22) %>%
ggplot(aes(x=vernalization, y=days.to.bolt, fill=fluctuation)) +
geom_boxplot() +
facet_wrap(~genotype) +
theme_bw() +
stat_compare_means(label="p.signif", label.y=130)
filter(expt1, grepl("Col", background) & temperature==22) %>%
ggplot(aes(x=vernalization, y=days.to.bolt, fill=fluctuation)) +
geom_boxplot() +
facet_wrap(~genotype) +
theme_bw() +
stat_compare_means(label="p.signif", label.y=30)
filter(expt1, grepl("Col", background) & temperature==22) %>%
ggplot(aes(x=vernalization, y=days.to.bolt, fill=fluctuation)) +
geom_boxplot() +
facet_wrap(~genotype) +
theme_bw() +
stat_compare_means(label="p.signif", label.y=15)
filter(expt1, grepl("Col", background) & temperature==22) %>%
ggplot(aes(x=vernalization, y=days.to.bolt, fill=fluctuation)) +
geom_boxplot() +
facet_wrap(~genotype) +
theme_bw() +
stat_compare_means(label="p.signif", label.y=5)
# mutate()
expt1.cm <- mutate(expt1, total.leaf.length.cm= total.leaf.length.mm/10)
View(expt1.cm)
expt1.cm <- mutate(expt1,
total.leaf.length.cm= total.leaf.length.mm/10,
blade.length.cm=blade.length.mm/10)
View(expt1.cm)
expt1.cm <- mutate(expt1,
total.leaf.length.cm= total.leaf.length.mm/10,
blade.length.mm=blade.length.mm/10)
View(expt1.cm)
expt1_ratio <- mutate(expt1, blade.ratio=blade.length.mm/total.leaf.length.mm)
View(expt1_ratio)
## BONUS
# creez une nouvelle colonne "late_flowering" qui contient TRUE si
# days.to.bolt est syperieur a 70 et FALSE sinon
expt1_late <-mutate(expt1, late_flowering=case_when(days.to.bolt > 70 ~ TRUE,
days.to.bolt < 70 ~ FALSE))
View(expt1_late)
expt1_late <-mutate(expt1, late_flowering=if_else(days.to.bolt > 70, TRUE, FALSE))
View(expt1_late)
expt1_late <-mutate(expt1, late_flowering=if_else(days.to.bolt > 70, "late", "early"))
View(expt1_late)
